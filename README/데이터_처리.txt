요약
. src/exe/make_training_data.sh --fname='dataset_v5' --line_size=300000
. src/exe/make_preprosses_data.sh --fname='dataset_v5_300000'
-----------------------------------------------------------------------
데이터 수집시 excel에 했을 때
1. 수집한 데이터를 rsc/xlsx2csv에 넣는다.
2. [. src/exe/make_scv.sh]를 입력한다.
    수집한 데이터 파일의 이름과 동일한 scv 파일이 생성된다.
3. 변경된 csv 파일을 알맞는 폴더에 넣는다.
-----------------------------------------------------------------------
각 폴더에 저장된 데이터 의미
low_data            training_data를 만들기 위해 찾아낸 조합 요소 집합
train_data          preprocessed_data를 만들기 위해 찾아낸 문장 집합
preprocessed_data   인공지능에 넣을 수 있게 만든 전처리 데이터 집합
-----------------------------------------------------------------------
질문 수정을 위해서는?
1. src/make_preprocessed_data/create_training_data.py를 연다.
2. makeQ 함수 내에 result.append(추가 질문)을 추가한다.
    ex) 31 line 뒤에
        result.append('<intent:INT_NEW> ' + data['new'] 추가
    이떄 new.csv 파일이 low_data 안에 있어야 함
-----------------------------------------------------------------------
train_data 만드는 법
1. [. src/exe/make_training_data.sh]를 입력한다.
    이때 필요에 따라 파일의 이름과 수집하는 데이터의 길이를 입력할 수 있다.
        입력법은 다음과 같다.
            파일 이름 삽입  --fname='dataset'
            데이터 길이     --line_size=30
    ex). src/exe/make_training_data.sh --fname='dataset' --line_size=30
2. 파일은 rsc/training_data에 저장되며 파일이름의 결과는 다음과 같다.
    아무 요소를 추가하지 않았을 때 || 데이터 길이를 조정했을 때
        test.csv
    파일 이름이 변경 되었을 때
        파일이름_[데이터 길이].csv
            ex) dataset_30.csv
-----------------------------------------------------------------------
preprocessed_data 만드는 법
1. [. src/exe/make_preprosses_data.sh]를 입력한다.
    이때 필요에 따라 파일의 이름을 입력할 수 있다.
        방법은 위와 동일하다
    ex). src/exe/make_preprosses_data.sh --fname='dataset_30'
2. 파일은 rsc/preprocessed_data에 저장되며 파일이름의 결과는 다음과 같다.
    요소가 없을 때
        test.csv
    이름을 넣을 때
        dataset_30.csv
-----------------------------------------------------------------------
이후는 인공지능 파트가 가져감